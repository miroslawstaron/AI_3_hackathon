# This file checks if the files generated by the models execute

# go through the file in ./rosetta_programs directory
# execute each file 
import os
import subprocess
import re
import pandas as pd
from tqdm import tqdm

def extract_python_code(text):
    pattern = r'```python(.*?)```'
    match = re.search(pattern, text, re.DOTALL)
    if match:
        return match.group(1).strip()
    return None

def execute_files():
    list_results = []
    for file in tqdm(os.listdir('./rosetta_programs')):
        if file.endswith('.py'):
            # read the string from the file
            with open(os.path.join('./rosetta_programs', file), 'r') as f:
                text = f.read()
            # extract the python code
            python_code = extract_python_code(text)
            if python_code is None:
                continue
            else:
                # write the python code to a new file
                with open('temp.py', 'w') as f:
                    f.write(python_code)
            try:
                strResult = f'{file}'
                oneFileRes = [strResult]
                strR = ""
                # print('Executing file: ' + file)
                result = subprocess.run(['python3', './temp.py'], capture_output=True, text=True, check=True, timeout=10)
                strR += "Error" if "Error" in result.stderr else "OK"
            except subprocess.CalledProcessError as e:
                # print(f"Script {file} with return code {e.returncode}")
                strR = "Error"
            except subprocess.TimeoutExpired:
                strR = "timed out"
            oneFileRes.append(strR)
            #print(strResult)
            list_results.append(oneFileRes)
            df = pd.DataFrame(list_results, columns=['File', 'Result'])
            df.to_csv('results.csv', index=False)
    return list_results

if __name__ == '__main__':
    lstResults = execute_files()
    df = pd.DataFrame(lstResults, columns=['File', 'Result'])
    df.to_csv('results.csv', index=False)